// String matching algorithm
// Time complexity O(n+m)
// space complexity O(n+m)
// this entire algorithm revolves around a concept 1<=l<=i<=r

#include <bits/stdc++.h>
using namespace std;

int main(){
    string pat; cin >> pat;
    string s; cin >> s;
    string total = pat + "$" + s;
    int n = total.length();
    int l=0,r=0;
    int z[n] = {0};
    for(int i=0;i<n;i++){
        if(i > r){
            l = r = i;
            while(r<n && total[r-l]==total[r])
                r++;
            z[i] = r-l;
            r--;
        }
        else{
            int ind = i- l ;
            if(z[ind]<r-i+1)
                z[i] = z[ind];
            else{
                l = i;
                while(r<n && total[r-l]==total[r])
                    r++;
                z[i] = r-l;
                r--;
            }
        }
    }
    int count = 0;
    int k = total.length()-s.length();
    // cout << k << endl;
    for(int i=k;i<total.length();i++){
        if(z[i]==pat.length())
            count++;
    }
    cout << count;
}
